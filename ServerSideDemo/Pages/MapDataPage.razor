@page "/map-data"
@using GoogleMapsComponents
@using GoogleMapsComponents.Maps
@using System.Diagnostics
@using GoogleMapsComponents.Maps.Data
@*
    The code for this sample was taken from below on 09/02/2020:
    https://developers.google.com/maps/documentation/javascript/earthquakes#maps_earthquake_circles-typescript
*@

<h1>Map Data</h1>

<GoogleMap @ref="@(this._map1)" Id="map1" Options="@(this._mapOptions)" OnAfterInit="async () => await OnAfterMapInit()"></GoogleMap>
<button @onclick="@GetMapData">Get MapData </button>

<div>
    <p style="font-weight: bold; font-size: 1.2em">@this._message</p>
</div>

@functions {
    private GoogleMap _map1;
    private MapOptions _mapOptions;
    private string _message = "";

    protected override void OnInitialized()
    {
        this._mapOptions = new MapOptions
        {
            Zoom = 13,
            Center = new LatLngLiteral
            {
                Lat = -33.8688,
                Lng = 151.2195
            },
            MapTypeId = MapTypeId.Roadmap
        };
    }

    private async Task OnAfterMapInit()
    {

    }

    private async Task GetMapData()
    {

        var jsonData = "{ \"type\": \"FeatureCollection\", \"features\": [{ \"type\": \"Feature\",\"properties\": { \"stroke\": \"#555555\", \"stroke-width\": 2, \"stroke-opacity\": 1 }, \"geometry\": {\"type\": \"LineString\",  \"coordinates\": [ [ 151.219, -33.869], [151.23, -33.88]]}}]}";
        
        //var rootFeature = new Feature();
        //var childFeature = new Feature();
        //childFeature.Properties = new Dictionary<string, object>[]
        //{
        //    new Dictionary<string, object>()
        //    {
        //        {"type", "Feature"},
        //        {"properties", 
        //            new Dictionary<string, object>()
        //            {
        //                {"stroke", "#555555"},
        //                {"stroke-width", 2},
        //                {"stroke-opacity", 1},
        //            }
        //        },
        //        {"geometry",
        //            new Dictionary<string, object>()
        //            {
        //                {"type", "LineString"},
        //                {"coordinates", "[ 79.8046875, 45.583289756006316], [ 73.828125, 48.922499263758255],[72.421875,46.07323062540838],[72.0703125,42.553080288955826],[79.453125,41.77131167976407],[78.046875,37.71859032558816],[72.7734375,34.016241889667015],[66.796875,39.63953756436671],[66.4453125,48.45835188280866],[74.1796875,53.74871079689897],[55.1953125,55.7765730186677],[49.92187499999999,48.69096039092549]"},
        //            }
        //        },
        //    }
        //};

        //rootFeature.Properties = new Dictionary<string, object>[]
        //{
        //    new Dictionary<string, object>()
        //    {
        //        {"type", "FeatureCollection"},
        //        {"features", childFeature},
        //    }
        //};

        var addedFeature = await _map1.InteropObject.Data.AddGeoJson(jsonData);
    }
}

